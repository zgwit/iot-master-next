http: //localhost:316/v1/device/event/history?model_id=model_test&device_ids=[]&event_ids=[]&size=3&offset=1&desc=true


package main

import (
	"github.com/gin-gonic/gin""net/http""net/http/httputil""net/url"
)

func main() {
	router := gin.Default()

	router.GET("/api/list", func(c *gin.Context) {
        // 目标地址
		targetURL, _ := url.Parse("http://xxxx:316")

		// 创建一个反向代理
		proxy := httputil.NewSingleHostReverseProxy(targetURL)

		// 更改请求头，用于识别真实的客户端IP
		c.Request.Host = targetURL.Host
		c.Request.URL.Host = targetURL.Host
		c.Request.URL.Scheme = targetURL.Scheme
		c.Request.Header.Set("X-Forwarded-Host", c.Request.Header.Get("Host"))
		c.Request.Header.Set("X-Real-IP", c.ClientIP())
		c.Request.Header.Set("Host", targetURL.Host)

		// 请求转发
		proxy.ServeHTTP(c.Writer, c.Request)
    })

	router.Run(":8316")
}


system_nsq_client.Publish("attribute.write", zgwit_utils.ToJson2(zgwit_model.AttributeWritePackage{
	ModelId: "model_test",
	DeviceId: "device_test2",
	Points: zgwit_model.KeyValue{
        "wendu": 36.5,
        "baojing": "nihao",
    },
}))
time.Sleep(1 * time.Second)
datas := zgwit_model.DeviceEventHistory{}
if err := datas.Read(&system_influx,
"model_test",
[]string{},
[]string{}, zgwit_model.Page{Start: 0, Stop: time.Now().Unix(), Size: 5, Offset: 1, Desc: true
}); err != nil {
	fmt.Println("err2", err)
}
fmt.Println("get:", zgwit_utils.ToJson3(datas))